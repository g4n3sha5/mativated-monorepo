// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
}

enum SessionType {
  GI
  NO_GI
  GYM
  YOGA
  MMA
  BOXING
  RUN
  SWIM
  BIKE
  MEDITATION
  OTHER
}

enum TechniqueType {
  CHOKE
  TAKEDOWN
  JOINT_LOCK
  SWEEP
  ESCAPE
  TRANSITION
  GUARD
  GUARD_PASS
  CONTROL
  DEFENCE
  POSITION
  SUBMISSION
}

enum Intensity {
  LIGHT
  MODERATE
  HIGH
  VERY_HIGH
}

model User {
  id              String      @id @default(cuid())
  userName        String?
  displayName     String
  externalId      String      @unique
  sessions        Session[]
  techniquesAdded Technique[] @relation("techniquesAdded")
  tagsAdded       Tag[]       @relation("tagsAdded")
}

// todo author should refer to Id, not externalId
model Session {
  id            Int                @id @default(autoincrement())
  date          DateTime           @db.Date
  time          String
  type          SessionType
  location      String?
  minutesLength Int
  intensity     Intensity
  notes         String?            @db.VarChar(255)
  techniques    SessionTechnique[]
  sparringTime  Int?
  drillingTime  Int?
  author        User               @relation(fields: [authorId], references: [externalId])
  authorId      String
  weight        Int?
}

model Technique {
  id          String             @id @default(uuid())
  name        String             @unique
  description String?
  type        TechniqueType
  videoUrl    String?
  Session     SessionTechnique[]
  giOnly      Boolean            @default(false)
  tags        Tag[]              @relation("techniqueTags")
  createdAt   DateTime           @default(now())
  createdBy   User?              @relation("techniquesAdded", fields: [userId], references: [id])
  userId      String?
}

model SessionTechnique {
  id           String    @id @default(uuid())
  session      Session   @relation(fields: [sessionId], references: [id])
  sessionId    Int
  technique    Technique @relation(fields: [techniqueId], references: [id])
  techniqueId  String
  notes        String?
  drillingTime Int?

  @@index([sessionId, techniqueId])
}

model Tag {
  id          String      @id @default(uuid())
  name        String      @unique
  description String?
  techniques  Technique[] @relation("techniqueTags")
  createdBy   User?       @relation("tagsAdded", fields: [userId], references: [id])
  userId      String?
}
